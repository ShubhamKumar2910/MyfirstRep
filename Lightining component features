//When you dont have to get paragraph tag or tag...
<lightning:formattedRichText >
//To include br in cmp
<aura:unescapedHtml value="{!v.self_Ass_Values}" />
-----------------------------------------------------------
Lightning tabs can be switched on the basis of values from formula using this method:
handleChange: function(component, event, helper) {
      var abc = component.get("v.Is_English");
      if(abc == true){
           component.set("v.tabId",'1'); 
      }else{
          component.set("v.tabId",'2'); 
      }
  },
is english a boolean attribute and tabid will be the attribute for setting the order;
 <lightning:tabset selectedTabId="{!v.tabId}" aura:id="tabs" >
 <lightning:tabset selectedTabId="{!v.tabId}" aura:id="tabs" >
  </lightning:tab>
 <lightning:tab label="2nd Language" id="2">
 </lightning:tab>
 </lightning:tabset> 
------------------------------------------------------------
 <aura:if isTrue="{!v.searchAss}">
       //CHECKING A SITUATION IN AURA IF AND ELSE
       <aura:if isTrue="{!or(v.fieldName=='Name')}">
            <a href="{! $Site.CurrentSiteUrl+'/lightning/cmp/c__AssignmentCandidatesPageComp?c__mandateId='+(v.recordId)}" target="_blank">{!v.fieldValue}</a>
            <aura:set attribute="else">
                {!v.fieldValue}
            </aura:set>
        </aura:if>
       
    </aura:if>

-----------------------------------------------------------
lighning component Check box..instead of ui input box:
<lightning:input aura:id="DisclaimerCheckBox" type="checkbox" label="print." 
                    name="DisclaimerCheckBox" value="DisclaimerCheckBox" onchange="{!c.handleCheck}" />
                    
handleCheck : function(component, event, helper) {
var isChecked = component.find("DisclaimerCheckBox").get("v.checked");
component.set("v.DisclaimerValue", isChecked);
}
