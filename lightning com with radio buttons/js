({
    doInit: function(component, event, helper) {
        
        helper.fetchDataHelper(component,event,helper);
        helper.getvalueofstatusandmoduleHelper(component,event,helper);
        
    },
    
      reInit : function(component, event, helper) {
        $A.get('e.force:refreshView').fire();
    },
    
    sectionOne : function(component, event, helper) {
        helper.helperFun(component,event,'articleOne');
    },
    sectiontwo : function(component, event, helper) {
        helper.helperFun(component,event,'articletwo');
    },
    
    updateField: function(component,event,helper){
        debugger;
        var fieldValue = event.currentTarget.getAttribute('data-fieldValue');
        var fieldName = event.currentTarget.getAttribute('data-fieldName');
        
        var AssRec = component.get("v.Ass_notes");
        //AssRec[fieldName] = fieldValue !='none'?fieldValue:'';
        AssRec[fieldName] = fieldValue;
        
        
        component.set("v.Ass_notes",AssRec);
        
    },
    goBack : function(component,event,helper){
        
        helper.updateFieldHelper(component,event,helper);
    },
    setOutput : function(component, event, helper) {
        var dateControl = document.querySelector('input[type="date"]');
        dateControl.value = '';
    },
})



HELPER JS



({
    fetchDataHelper: function(component,event,helper){
        
        var myPageRef = component.get("v.pageReference");
        
        var mandateId = myPageRef.state.c__mandateId;
        
        component.set("v.mandateId", mandateId);
        
        debugger;
        
        var action = component.get("c.fetchNotes");
        action.setParams({
            recId : component.get("v.mandateId")
        });
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                {
                    component.set("v.Ass_notes",result);
                    console.log('Result==>'+result);
                }
            }
        });
        $A.enqueueAction(action);
    },
    
      helperFun : function(component,event,secId) {
        var acc = component.find(secId);
        for(var cmp in acc) {
            $A.util.toggleClass(acc[cmp], 'slds-show');  
            $A.util.toggleClass(acc[cmp], 'slds-hide');  
        }
    },
    
    
    updateFieldHelper: function(component,event,helper)
    {
        var myPageRef = component.get("v.pageReference");
        
        var mandateId = myPageRef.state.c__mandateId;
        
        component.set("v.mandateId", mandateId);
        
        debugger;
        console.log('Ass_notes'+component.get("v.Ass_notes"));
        var action = component.get("c.updateNotes");
        action.setParams({
            assignmentNoteRec : component.get("v.Ass_notes")
        });
        action.setCallback(this,function(response){
                var result = response.getReturnValue();
                debugger;
                if(response.getState() === "SUCCESS"){
                        var toastEvent = $A.get("e.force:showToast");
                            toastEvent.setParams({
                                "title": "Success!",
                                "message": "The record has been updated successfully.",
                                "type":"success"
                            });
                        toastEvent.fire();
                        window.history.back();
                }else{
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        "title": "Error!",
                        "message": result,
                        "type":"error"
                    });
                    toastEvent.fire();
                }
            
        });
        $A.enqueueAction(action);
    }
})


---------------------------------------HELPER---------------------------------------------------------------------------------


({
    fetchDataHelper: function(component,event,helper){
        
        var myPageRef = component.get("v.pageReference");
        
        var mandateId = myPageRef.state.c__mandateId;
        var teamName = myPageRef.state.c__teamName;
        component.set("v.mandateId", mandateId);
        component.set("v.teamName", 'Back to '+teamName+' Review');
        
        debugger;
        
        var action = component.get("c.fetchNotes");
        action.setParams({
            recId : component.get("v.mandateId")
        });
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                {
                    component.set("v.Ass_notes",result);
                    console.log('Result==>'+result);
                }
            }
        });
        $A.enqueueAction(action);
    },
    
    getvalueofstatusandmoduleHelper : function(component,event,helper){
        
        debugger;
        
        var myPageRef = component.get("v.pageReference");
        var mandateId = myPageRef.state.c__mandateId;
        component.set("v.mandateId", mandateId);
        
        debugger;
        
        var action = component.get("c.getingvalues");
        
        action.setParams({
            Recid : component.get("v.mandateId"),
        });
        
        
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            console.log('Result'+result[0].Assignment_Status__c);
            console.log('Result'+result[0].Module__c);
            console.log('Result'+result[0]);
            debugger;
            if(response.getState() === "SUCCESS"){
                {
                    component.set("v.SelectedStatus",result[0].Assignment_Status__c);
                    component.set("v.SelectedModule",result[0].Module__c);
                      console.log('Result==>'+result);
                }
            }
        });
        $A.enqueueAction(action);
    },
    getValueOfmodule : function(component,event,helper){
        
        debugger;
        
        var action = component.get("c.getValueOfModule");
        
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                {
                    component.set("v.StatusValues",result);
                    console.log('Result==>'+result);
                }
            }
        });
        $A.enqueueAction(action);
    },
    getValueOfStatus : function(component,event,helper){
        
        debugger;
        
        var action = component.get("c.getValueOfStatus");
        
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                {
                    component.set("v.StatusValues",result);
                    console.log('Result==>'+result);
                }
            }
        });
        $A.enqueueAction(action);
    },
    
    
    helperFun : function(component,event,secId) {
        var acc = component.find(secId);
        for(var cmp in acc) {
            $A.util.toggleClass(acc[cmp], 'slds-show');  
            $A.util.toggleClass(acc[cmp], 'slds-hide');  
        }
    },
    
    updatemodulehelper : function(component,event,helper){
        
        var myPageRef = component.get("v.pageReference");
        var mandateId = myPageRef.state.c__mandateId;
        component.set("v.mandateId", mandateId);
        
        debugger;
        console.log('Status'+component.get("v.SelectedModule"));
        
        var action = component.get("c.updateModulevalue");
        
        action.setParams({
            Recid : component.get("v.mandateId"),
            Module : component.get("v.SelectedModule")
        });
        
        
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS")
                {
                    component.set("v.displayChangeModule", false);
                    
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        "title": "Success!",
                        "message": "The Module has been updated successfully.",
                         "duration":"5000",
                        "type":"success"
                    });
                    toastEvent.fire();
                }
            else{
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    "title": "Error!",
                    "message": 'Some error Occured',
                    "type":"error"
                });
                toastEvent.fire();
            }
        });
        $A.enqueueAction(action);
    },
    
    updatestatushelper : function(component,event,helper){
        
        var myPageRef = component.get("v.pageReference");
        var mandateId = myPageRef.state.c__mandateId;
        component.set("v.mandateId", mandateId);
        
        debugger;
        console.log('Status'+component.get("v.SelectedStatus"));
        
        var action = component.get("c.updatestatusvalue");
        
        action.setParams({
            Recid : component.get("v.mandateId"),
            status : component.get("v.SelectedStatus")
        });
        
        
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                
                 component.set("v.displayChangeStatus", false);
                    
                    
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        "title": "Success!",
                        "message": "The Status has been updated successfully.",
                         "duration":"5000",
                        "type":"success"
                    });
                    toastEvent.fire();
                 
            }
            else{
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    "title": "Error!",
                    "message": 'Some error Occured',
                    "type":"error"
                });
                toastEvent.fire();
            }
            
        });
        $A.enqueueAction(action);
    },
    updateFieldHelper: function(component,event,helper)
    {
        var myPageRef = component.get("v.pageReference");
        
        var mandateId = myPageRef.state.c__mandateId;
        
        component.set("v.mandateId", mandateId);
        
        debugger;
        console.log('Ass_notes'+component.get("v.Ass_notes"));
        var action = component.get("c.updateNotes");
        action.setParams({
            assignmentNoteRec : component.get("v.Ass_notes")
        });
        action.setCallback(this,function(response){
            var result = response.getReturnValue();
            debugger;
            if(response.getState() === "SUCCESS"){
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    "title": "Success!",
                    "message": "The record has been updated successfully.",
                    "duration":"5000",
                    "type":"success"
                });
                toastEvent.fire();
                window.history.back();
            }else{
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    "title": "Error!",
                    "message": result,
                    "type":"error"
                });
                toastEvent.fire();
            }
            
        });
        $A.enqueueAction(action);
    }
})
